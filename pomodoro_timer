#Import libraries
import time 
import os
from colorama import Fore, Style, init
init(autoreset=True)

#

#For clearing screen
def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

clear_screen()

pomodoro_count = 0

#Countdown function displaying remaining time
def countdown(seconds, session_type):
    #Color coding for type of session
    if session_type == "Work":
        color = Fore.RED
    elif session_type == "Break":
        color = Fore.GREEN
    elif session_type == "Long Break":
        color = Fore.BLUE
    else:
        color = Fore.WHITE

    while seconds > 0:
        mins, secs = divmod(seconds, 60)
        #Formats time as mm:ss
        timeformat = '{:02d}:{:02d}'.format(mins, secs)
        print(f"{color}{session_type} Time Remaining: {timeformat} ", end = '\r')
        time.sleep(1)
        seconds -= 1
    print(f"{color}{session_type} session ended!\n")
    #Play sound at end of session (only works on Mac)
    os.system('afplay /System/Library/Sounds/Glass.aiff')
    


#Ask user for duration of work session
work_duration = 5
#int(input("\nEnter work duration in minutes: ")) * 60
#Ask user for duration of break session
break_duration = 3
#int(input("Enter break duration in minutes: ")) * 60

while True:
    #Start Pomodoro timer
    print("\n\nStarting Pomodoro Timer...\n")

    time.sleep(1.5)

    #Starts work session
    print("Work session started!\n")
    countdown(work_duration, "Work")
    
    #Update pomodoro count
    pomodoro_count += 1
    
    #Clear screen between sessions
    clear_screen()

    #Decide which break type to take
    if pomodoro_count % 4 == 0:
        break_duration = break_duration * 2
        print(f"âœ… {pomodoro_count} Pomodoros completed! You finished a full set, it's time for a longer break! ðŸŒ´\n")
        countdown(break_duration, "Long Break")
    else:
        #Starts standard break session
        print("Break session started!\n")
        countdown(break_duration, "Break")
    
    #Update and display pomodoro count
    if pomodoro_count == 1:
        print("1 Pomodoro completed! Great start! ðŸš€ \n")
    elif pomodoro_count == 2:
        print("2 Pomodoros completed! Keep it up! ðŸ’ª \n")
    elif pomodoro_count == 3:
        print("3 Pomodoros completed! Almost a full set! ðŸŽ¯ \n")
    else:
        print(f"{pomodoro_count} Pomodoros completed! ðŸ™Œ")


    #Asks user if want to repeat cycle (loop)
    repeat = input("Do you want to start another Pomodoro cycle? (y/n): ").lower()
    if repeat != 'y':
        print("Pomodoro session ended. Good job!\n")
        break